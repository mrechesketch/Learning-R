max()
source("bubbleSort(pr1).R")
source("bubbleSort(pr1).R")
maxRec( 1:10)
maxRec( c(1,2) )
source("bubbleSort(pr1).R")
maxRec( c(1,2) )
source("bubbleSort(pr1).R")
maxRec( c(1,2) )
maxRec( 1:10)
source("bubbleSort(pr1).R")
maxLoop( 1:10)
maxLoop( 1:111)
Reduce( function(x,y) if ( x > y) x else y, 1:10 )
c(1:10)[11]
source("max(pr1).R")
maxWhile( 1:10 )
maxWhile( 1:100 )
maxFir( 1:100 )
maxFor( 1:100 )
maxFor( 1 )
maxFor( 1 )
maxFor( 1, 3 )
maxFor( 1 )
maxRed(1)
maxRec(1)
source("max(pr1).R")
maxRed(1)
maxRed(122)
maxRed(1:100)
cat("hello", "goodbye")
f
cat("the output of maxRec(1:10) is: ", maxRec(1:10) )
cat("the output of maxRec(1:10) is: ", maxRec(1:10), "\n" )
cat("the output of maxRec(1:10) is:", maxRec(1:10), "\n" )
source("max(pr1).R")
source("max(pr1).R")
source("max(pr1).R")
1:10[11]
c(1:10)[11]
source("max(pr1).R")
source("max(pr1).R")
source("max(pr1).R")
source("max(pr1).R")
source("max(pr1).R")
source("max(pr1).R")
source("max(pr1).R")
source("max(pr1).R")
source("max(pr1).R")
source("max(pr1).R")
source("max(pr1).R")
source("max(pr1).R")
q()
H1 <- 9
source("friends(pr2).R")
source("friends(pr2).R")
source("friends(pr2).R")
C3
source("friends(pr2).R")
C3
source("friends(pr2).R")
source("friends(pr2).R")
C3$getNthOrderFriends(1)
C3$getNthOrderFriends(2)
mf <- c3$getFriends()
mf <- C3$getFriends()
mf
tf <- sapply(mf, function(ID) getPerson(ID)#getFriends() ) 
tf
tf <- sapply(mf, function(ID) getPerson(ID)$getFriends() ) 
tf
unlist(tf)
source("friends(pr2).R")
mf <- C3$getFriends()
tf <- sapply(mf, function(ID) getPerson(ID)$getFriends() ) 
tf
unlist(tf)
C3$getNthOrderFriends(2)
source("friends(pr2).R")
C3$getNthOrderFriends(2)
source("friends(pr2).R")
source("friends(pr2).R")
source("friends(pr2).R")
source("friends(pr2).R")
source("friends(pr2).R")
out2
secondO
q()
source("merge.R")
merge( 1, 3)
source("merge.R")
merge( 1, 3)
merge( 1, c() )
length( 1 )
length( 22 )
length( c() )
c()[1]
source("merge.R")
merge( 1, c() )
merge( 1, 3)
`%+=%` <- function(value, incr) value <<- value + incr
v <- 99
v %+=% 5
v
`incr<-` <- function(value, increment) value + increment
incr(v) <- 1
v
`%+=%` <- function(value, increment) incr(value) <- increment
v %+=% 5
v
source("merge.R")
merge( 1, 3)
merge( 1, c() )
merge( c() , c() )
merge( c() , 1 )
source("merge.R")
merge( c() , 1 )
merge( c() , c(1:3) )
source("merge.R")
merge( c() , c(1:3) )
merge( c(0 , 4) , c(1:3) )
merge( 1, 3)
merge( c(1:4) , c(1:3) )
merge( c(1:4) , c(1:3) )
pp <- function(v, i) v <<- v + i
value
pp(value, 5)
value
value
v
pp <- function(v, i) v <- v + i
pp(v, 4)
v
v
source("merge.R")
ac <- createCounter(1)
ac()
ac
ac$value
d <- ac(1)
d <- ac()
d
d
environment(D)
environment(d)
d
d <- 3
environment(d)
environment(ac)
environment()
source("merge.R")
v <- 9
pp(v, 4)
source("merge.R")
pp(v, 4)
parent
parent.env
parent.env(environment() )
source("merge.R")
pp(v, 4)
source("merge.R")
pp(v, 4)
source("merge.R")
pp(v, 4)
ls
ls(environment() )
c <- environment()
c$v
v
source("merge.R")
v <- 3
v
pp(v, 2)
v
v
c <- v
c
pp(v, 2)
c
v
x <- 9
pp(x, 2)
x
v
`++<-` <- function(value, increment) value + increment
++(v) <- 3
++
f
`\\+\\+<-` <- function(value, increment) value + increment
++(v) <- 3
q()
