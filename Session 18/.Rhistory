source("regex.R")
isAlpha("j")
isAlpha("0")
isAlpha("-")
source("regex.R")
source("regex.R")
isAlphaNum(alphaNumTests$inputs[1])
source("regex.R")
isAlphaNum(alphaNumTests$inputs[1])
isAlphaNum(alphaNumTests$inputs[2])
isAlphaNum(alphaNumTests$inputs[3])
source("regex.R")
hasAlpha5("f")
hasAlpha5("ffffffff")
hasAlpha5("ffff")
hasAlpha5("fffff")

source("regex.R")
hasAlpha5("fffff")
hasAlpha5("ffffff")
hasAlpha5("fffffff")
hasAlpha5("fff")
hasAlpha5("fffffff")
source("regex.R")
hasAlpha5("fffffff")
grep("[A-z]{5}", "abcdefg")
grep("[A-z]{5}", "abcd3efg")
grep("[A-z]{5}", "abcde3fg")
grep("[A-z]{5}", "abcdefg3fdsargd")
grep("[A-z]{5}", "abcdefg3fdsargd", value=TRUE)
grep("[A-z]{5}", "abcd3efg")
grep("[A-z]{5}", "abcd3efg", value = T)
grep("[A-z]{,2}", "abcd3efg", value = T)
grep("[A-z]", "abcd3efg", value = T)
grep("[0-9][A-z]{2}", "abcd3efg", value = T)
grep("[0-9][A-z]{2}", "abcd3ef", value = T)
regmatches("[0-9][A-z]{2}", "abcd3ef", value = T)
source("regex.R")
hasAlpha5("fffffff")
hasAlpha5("fffffff3ddddddddd")
hasAlpha5("fff2ffff3dddd5ddddd")
hasAlpha5("fff2ffff3dddd5dddddr")
hasAlpha5("fff2ffff3dddd5dddddrrrrrrrr")
hasAlpha5("fff2ffff3dddd5dddddrrrr")

source("regex.R")
hasLength("df;lahsf")
source("regex.R")
hasLength("df;lahsf")
hasLength("df;lahsdsfaff")
hasLength("df;lahsdsfaf32f")
source("regex.R")
validPassword("328340Ea*")
validPassword("328340ea")
validPassword("cretos")
validPassword("soStringgg")
validPassword("soStringgg")
validPassword("")
validPassword(";adlskjsa;ldfjdlf")
validPassword("whydoesthishappen")
s <- "whydoesthishappen"
hasLength(s)
hasUpper(s_
)
hasUpper(s)
source("regex.R")
validPassword("whydoesthishappen")
source("regex.R")
runTests(vpTests)
source("regex.R")
source("regex.R")
source("regex.R")
hasLength("0123457")
source("regex.R")
source("regex.R")
q()
