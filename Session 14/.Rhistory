library("ggmap")
library(ggmap)
install.packages("ggmap")
library("ggmap")
get_googlemap("waco texas", zoom = 12) %>% ggmap()
library(dplyr)
install.packages(dplyr)
install.packages("dplyr")
library(dplyr)
get_googlemap("waco texas", zoom = 12) %>% ggmap()
library(ggplot2)
get_googlemap("waco texas", zoom = 12) %>% ggmap()
library(magrittr)
# only violent crimes
violent_crimes <- filter(crime, 
  offense != "auto theft", offense != "theft", offense != "burglary"
)
# rank violent crimes
violent_crimes$offense <- factor(
  violent_crimes$offense,
  levels = c("robbery", "aggravated assault", "rape", "murder")
)
# restrict to downtown
violent_crimes <- filter(violent_crimes,
  -95.39681 <= lon & lon <= -95.34188,
   29.73631 <= lat & lat <=  29.78400
)
qmplot(lon, lat, data = violent_crimes, maptype = "toner-lite", color = I("red"))
q()
source("huckel.R")
testMat
testMat[1,1]
testMat[2,2]
source("huckel.R")
source("huckel.R")
testMat
testMat[1,1]
testMat[c(1,1)]
testMat[1,1]
rep(1:3, 2)
vapply(c(1:3), function(x) testMat[x,x])
vapply(c(1:3), function(x) testMat[x,x])
sapply(c(1:3), function(x) x)
sapply(c(1:3), function(x) testMat[x,x])
sapply(c(1:length(testMat)), function(x) testMat[x,x])
length(testMat)
dim(testMat)
dim(testMat)[1]
vapply(c(1:3), function(x) testMat[x,x], numeric(1))
q()
source("huckel.R")
benzene$vector
benzene$vector**2
benzene$value
orbitals <- benzene$vector
orbitalsSq <- orbitals**2
orbitalsSq[,1]
sum(orbitalsSq[,1])
sum(orbitalsSq[,2])
sum(orbitalsSq[,3])
sum(orbitalsSq[,4])
sum(orbitalsSq[,5])
sum(orbitalsSq[,6])
benzeneAdjMat
sum(orbitalsSq[1,])
sum(orbitalsSq[2,])
1/6
1/(6**0.5)
1/(4**0.5)
A <- matrix(c(13, -4, 2, -4, 11, -2, 2, -2, 8), 3, 3, byrow=TRUE)
ev <- eigen(A)
ev$vectors
benzene$vectors
benzene$values
orbitals <- benzene$vector
source("huckel.R")
source("huckel.R")
anotherMolecule
1/anotherMolecule$vectors
source("huckel.R")
benzene$vectors
benzene$values
source("huckel.R")
source("huckel.R")
benzene$values
benzene$vectors
source("huckel.R")
benzene$vectors
benzene$values
source("huckel.R")
benzene$values
benzene$vectors
as.integer(benzene$values)
as.character(benzene$values)
benzene$values
as.long
round
round(benzene$values)
source("huckel.R")
benzene$vectors
benzene$vectors$-2
benzene$vectors[-2]
benzene$vectors
source("huckel.R")
apply(orbitals, 2, sum)
apply(orbitals, 2, function(x) sum(x**2))
orbitals
orbitals * c(6, 4, 4, 4, 4, 6)**0.5
t(orbitals) * c(6, 4, 4, 4, 4, 6)**0.5
source("huckel.R")
ones
ones == c(1,1,1,1,1,1)
round(ones) == c(1,1,1,1,1,1)
source("huckel.R")
ones < 1.01
ones < 1.000001
source("huckel.R")
needsWork
source("huckel.R")
source("huckel.R")
sumOfSquares
source("huckel.R")
one
testWaveFunction
testWaveFunction / (sumOfSquares**0.5)
sum(testWaveFunction / (sumOfSquares**0.5) )
source("huckel.R")
one
source("huckel.R")
problem_1()
source("huckel.R")
problem_1()
source("huckel.R")
problem_1()
needsWork
source("huckel.R")
needsWork
problem_1()
sumSquares(needsWork[4,])
needsWork[4,]
2norm <- 0
norm2 <- 0
norm
source("huckel.R")
normalizeMat(needsWork)
norm2
norm2(c(1,1,1,1, 0))
hm <- normalizeMat(needsWork)
hm == orbitals
orbitals
abs
ans(hm[,1])
abs(hm[,1])
norm2(hm)
hm
source("huckel.R")
problem_2()
problem_1()
source("huckel.R")
vec <- c(1:10)
( vec**3 )**(1/3)
vec**3
( sum(vec**3) )**(1/3)
( sum(vec**Inf) )**(1/Inf)
vec**Inf
Inf**(1/Inf)
( sum(vec**999) )**(1/999)
( sum(vec**20) )**(1/20)
sum( vec/max(vec) )
sum( c(1:10)/10 )
vec1
vec1 <- c(2, 1, 1, 0)
vec1
( sum(vec1**3) )**1/3
( sum(c(1:10)**3) )**1/3
( sum(c(1:10)**4) )**1/4
( sum(c(1:10)**6) )**1/6
( sum(c(1:10)**7) )**1/7
( sum(c(1:10)**8) )**1/8
( sum(c(1:10)**9) )**1/9
( sum(c(1:10)**10) )**1/10
( sum(c(1:10)**2) )**1/2
( sum(c(1:10)**1) )**1/1
( sum(vec1**1) )**1/1
( sum(c(1:10)**10))
hmm <- sum(c(1:10)**10)
hmm
hmm*(1/10)
hmm*(1/100)
hmm*(1/1000)
hmm*(1/10000000)
hmm**(1/10)
( sum(c(1:10)**10) )**(1/10)
( sum(c(1:10)**11) )**(1/11)

( sum(c(1:10)**10000) )**(1/10000)
( sum(c(1:10)**1000) )**(1/1000)
( sum(c(1:10)**100) )**(1/100)
( sum(c(1:100)**100) )**(1/100)
( sum(c(1:100)**101) )**(1/101)
( sum(c(1:100)**1001) )**(1/1001)
p_norm(2, c(1:10)
)
q()
