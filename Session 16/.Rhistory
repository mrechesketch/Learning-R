source("energy.R")
source("energy.R")
data.heads
data$head
length(data)
data$names
str(data)
data$Date <- as.Date(data$Date)
str(data)
data$Average.Bill <- as.numeric(data$Average.Bill)
str(data)
source("energy.R")
data$Average.Bill
data$Average.Bill[1]
hmm <- as.numeric(data$Average.Bill)
hmm[1]
hmm
hmm <- sub('\\$', '', data$Average.Bill)
hmm
hmm <- sub('$', '', data$Average.Bill)
hmm
hmm <- sub('\$', '', data$Average.Bill)
hmm <- sub('\\$', '', data$Average.Bill)
source("energy.R")
str(data)
library("ggplot2")
ggplot(data, aes(Date, Average_Bill))
source("energy.R")
g
data$Date[1]
data$Date[4]
source("energy.R")
source("energy.R")
source("energy.R")
data$Date[1]
source("energy.R")
data$Date[1]
source("energy.R")
source("energy.R")
data#Date[1]
data$Date[1]
source("energy.R")
data$Date[1]
source("energy.R")
source("energy.R")
data$Date[1]
source("energy.R")
data$Date[1]
source("energy.R")
source("energy.R")
source("energy.R")
data$date[1]
data$Date[1]
source("energy.R")
g
str(data)
names(data)
names(data)[
source("energy.R")
dateVsMoney
dateVsConsumption
ggplot(data, aes(Date, Average.kWh) ) + geom_point()
dateVsCharge
dateVsConsumption
source("energy.R")
dateVsConsumption
dateVsConsumption
dateVsCharge
dateVsCharge
dateVsCharge
dateVsConsumption
hmm <- fft(data$Average.hWh)
fft
fft( 1:4 )
hmm <- fft(data$Average.kWh)
hmm[1]
hmm[2]
hmm[3]
hmm[4]
length(hmm)
length(data$Average.Bill)
plot(hmm)
source("energy.R")
data$t[1]
data$t[12]
data$t[13]
data$t[26]
data$t[25]
source("energy.R")
ok <- as.integer(data$t)
ok[1]
ok[30]
ok[13]
source("energy.R")
ggplot( data, aes(yearly, Average.kWh) )
source("energy.R")
dateVsConsumption2
3 % 2
3 %/% 2
3 %/% 3
3 %/% 4
1882 %/% 4
1882 %% 4
4*470 + 2
dateVsConsumption2
dateVsConsumption2
source("energy.R")
dateVsConsumption2
dateVsConsumption
source("energy.R")
dateVsConsumption
dateVsConsumption2
hmm <- fft(data$Average.kWh)
plot.frequency.spectrum(hmm)
source("energy.R")
plot.frequency.spectrum(hmm)
plot.frequency.spectrum(hmm xlimits=c(0,1))
plot.frequency.spectrum(hmm, xlimits=c(0,1))
plot.frequency.spectrum(hmm, xlimits=c(0,100))
plot.frequency.spectrum(hmm)
plot.frequency.spectrum(hmm, xlimits=c(0,210))
dateVsConsumption
require(devtools)
q()
install.packages("Rlinkedin")
library("Rlinkedin")
Rlinkedin?
()
?Rlinkedin
in.auth <- inOAuth()
searchPeople(token=in.auth, first_name="Alex", last_name="Echevarria")
getProfile(token=in.auth, first_name="Alex", last_name="Echevarria")
searchPeople(token=in.auth, first_name="Alex", last_name="Echevarria", partner = 0)
searchPeople(token=in.auth, first_name="Alex", last_name="Echevarria", partner = 1)
source("energy.R")
dateVsMoney()
dateVsMoney
source("energy.R")
dateVsMoney
dateVsCharge
source("energy.R")
source("energy.R")
5 %/% 4
c(3, 4, 5) %/% 4 
source("energy.R")
source("energy.R")
source("energy.R")
dateVsConsumption2
source("energy.R")
dateVsConsumption2
source("energy.R")
getYear(data$Date)
sapply( getYear, data$Date)
sapply( getYear, data$Date)
sapply(data$Date, getYear)
sapply(data$Date, function(x) getYear(x) )
source("energy.R")
source("energy.R")
data$Date[1]
source("energy.R")
data$Years <- getYear( as.character(data$Date) )
getYear("01/01/2000 12:00:00 AM")
source("energy.R")
data$Years <- getYear( as.character(data$Date) )
data$Years[1]
source("energy.R")
data$Months[1]
source("energy.R")
dateVsConsumption3
data$Months[4
]
data$Months[44]
source("energy.R")
dateVsConsumption3
q()
source("Restaurants.R")
source("Restaurants.R")
str(ref)
str(rdf)
rdf$Address[1]
add <- rdf$Address[1]
regmatches("(", add)
regmatches("(", ")))(")
regmatches("(", ")))(", perl=T)
regmatches("(", ")))(", perl=True)
regmatches("(+", ")))(dd", perl=True)
x <- c("abc", "def", "cba a", "aa")
m <- regexpr("a+", x, perl=TRUE)
m
m <- regexpr("(+)", add, perl=TRUE)
m <- regexpr("(", add, perl=TRUE)
m <- regexpr("\(", add, perl=TRUE)
m <- regexpr("\\(", add, perl=TRUE)
m
regmatches(add, m)
m <- regexpr("\\(+", add, perl=TRUE)
regmatches(add, m)
m <- regexpr("\\(*", add, perl=TRUE)
regmatches(add, m)
m <- regexpr("\\(+*", add, perl=TRUE)
m <- regexpr("\\(+\\)", add, perl=TRUE)
regmatches(add, m)
m <- regexpr("\\([:digit:]+\\,", add, perl=TRUE)
m <- regexpr("\\([:digit:]", add, perl=TRUE)
m <- regexpr("\\(.", add, perl=TRUE)
regmatches(add, m)
m <- regexpr("\\(.+", add, perl=TRUE)
regmatches(add, m)
m <- regexpr("\\(.+", add, perl=TRUE)
m
regmatches(add, m)
m <- regexpr("\\(.+\\)", add, perl=TRUE)
regmatches(add, m)
using
subset
use
with
llre <- with(rdf ( regexpr("\\(.+\\)", Address, perl=TRUE) )
)
str(rdf)
with( rdf, print(Address[1] ) )
dd <- with( rdf, regexpr("\\(.+\\)", add, perl=TRUE)  )
dd[1]
dd[2]
dd[3]
dd[5]
dd <- with( rdf, regexpr("\\(.+\\)", Address, perl=TRUE)  )
dd[1]
dd[2]
dd[]3
lonLatRegExprs <- with(rdf, regexpr("\\(.+\\)", Address, perl=TRUE) )
matchStrings <- with(rdf, regmatches(Address, lonLatRegExprs)
)
matchStrings[1]
matchStrings[2]
lonLatstr <- strsplit(matchStrings, ", ")
lonLatstr[1]
lonLatstr[[1]]
lonLatstr[[2]]
lonLatstr[[2]][1]
lonLatstr[[2]][2]
source("Restaurants.R")
length(lonLatStr)
length(rdf$Address)
length(lonLatRegExprs)
length(matchStrings)
dd <- c(1, 3, NA, 4)
is.na(dd)
sum( is.na(lonLatRegExprs) )
sum( is.NULL(lonLatRegExprs) )
sum( is.null(lonLatRegExprs) )
lonLatRegExprs[1]
lonLatRegExprs[2]
lonLatRegExprs[3]
lonLatRegExprs[4]
lonLatRegExprs[5]
lonLatRegExprs
matchStrings[1849]
lonLatRegExprs[1849]
rdf$Address[1849]
tstr <- rdf$Address[1849]
hmm <- regexpr("\\(.+\\)", tstr, perl=TRUE)
hmm
hmm <- regexpr("\\(.+", tstr, perl=TRUE)
hmm
hmm <- regexpr("\\(.+", "hello (ddd", perl=TRUE)
hmm
hmm <- regexpr("p", "hello (ddd", perl=TRUE)
hmm
rdf$Address[1849]
rdf$Address[1]
tstr
grepl("\\(.+\\)", tstr)
length(lonLatRegExprs) - length(matchStrings)
source("Restaurants.R")
rdf$lons[1]
rdf$lats[1]
rdf$lats[2]
rdf$lats[4
]
qmplot(lons, lats, data = rdf, maptype = "toner-lite", color = I("red"))
library(ggplot2)
library(ggmap)
library(dplyr)
qmplot(lons, lats, data = rdf, maptype = "toner-lite", color = I("red"))
lons
rdf$lons
lats
rdf$lats
qmplot(lons, lats, data = rdf, maptype = "toner-lite", color = I("red"))
rdf$lons[1]
source("Restaurants.R")
source("Restaurants.R")
qmplot(lons, lats, data = rdf, maptype = "toner-lite", color = I("red"))
length(rdf$Address)
length(lonLatStr)
ggmap(map, extent = "device")
us <- c(left = -125, bottom = 25.75, right = -67, top = 49)
map <- get_stamenmap(us, zoom = 5, maptype = "toner-lite")
ggmap(map, extent = "device")
qmplot(lons, lats, data = rdf, maptype = "toner-lite", color = I("red"))
austin <- c(30.266667, -97.733333)
map <- get_map(location = austin, zoom = 12)
qmplot(lats, lons, data = rdf, maptype = "toner-lite", color = I("red"))
source("Restaurants.R")
source("Restaurants.R")
austin
h <- 2
h %++% 1
q()
