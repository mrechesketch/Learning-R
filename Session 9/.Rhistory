source("homework.R")
numToFizzBuzz(9)
paste( c("po", "op"), collapse="")
paste( c("po", ""), collapse="")
character(0)
character(1)
source("homework.R")
numToFizzBuzz(9)
source("homework.R")
numToFizzBuzz(9)
numToFizzBuzz(15)
source("homework.R")
numToFizzBuzz(15)
source("homework.R")
numToFizzBuzz(15)
numToFizzBuzz(10)
numToFizzBuzz(c(1:16))
numToFizzBuzz( c(1:16) )
source("homework.R")
numToFizzBuzz( c(1:16) )
source("homework.R")
numToFizzBuzz( c(1:16) )
numToFizzBuzz(16 )
source("homework.R")
sapply( c(1:15), function(x) numToFizzBuzz(x) )
sapply( c(1:0), function(x) numToFizzBuzz(x) )
sapply( c(1:1), function(x) numToFizzBuzz(x) )
source("homework.R")
source("homework.R")
problem_1()
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
c <- PerSon()
c@age
c@age <- c@age+1
c@age
x <- c(c)
y <- c(c)
x[1]
x[1]@age <- x[1]@age+1
x[1]
x[1]@age
slot( x[1], "age)
vv <- slot( x[1], "age")
c@age <- c@age + 1
x[1]
c
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
source("homework.R")
p <- PerSon()
p
p@growUp()
growUp(p)
p@age
source("homework.R")
source("homework.R")
source("homework.R")
p <- PerSon()
growUp(p)
source("homework.R")
p <- PerSon()
growUp(p)
p
source("homework.R")
p <- PerSon()
growUp(p)
p
source("homework.R")
p <- PerSon()
p <- growUp(p)
p
c <- p
c 
c <- growUp(c)
c
p
ss <- c( name = "character", age = "numeric" )
c
ss
ss@name
slot(ss, name)
slot(ss, "name")
ss@help
getSlots(ss)
ss
ss[1]
ss[2]
getClass(ss)
slotNames(ss)
help(ss)
??ss
str(Ss)
str(ss)
ss[name]
ss[1]
ss[1][1]
ss[2]
ss[1][2]
ss[[1]]
pp <- c(name = "alex", age = 22)
pp
pp[1]
pp[[1]]
p[[2]]
isS4(pp)
integer(0)
factor(2)
factor(0)
factor()
isS4
isS4( c())
isS4( numeric() )
isS4( matrix())
str( factor(2) )
??factor()
sent <- "the sun is red but the moon is blue"
ss <- unlist( split( sent, ""))
ss
ss <- unlist( strsplit( sent, ""))
ss
ss <- unlist( strsplit( sent, " "))
ss
ws <- factor(ss)
ws
table(es)
table(ws)
ws[1]
ws[[1]]
wss <- factor(ws, levels=ss)
ws
ws
ws[1]
ws
str(ws)
isS4(ws)
levels(ws)
levels(ws)[ws]
levels(ws)["the"]
levels(ws)
str(levels(ws))
source("homework.R")
source("homework.R")
source("homework.R")
p <- PerSon
p
p <- PerSon()
p
source("homework.R")
source("homework.R")
source("homework.R")
p <- PerSon()
p
p <- PerSon(name = "Alex", age = "22", profession = "unemployed" )
p <- PerSon(name = "Alex", age = 22, profession = "unemployed" )
p
source("homework.R")
source("homework.R")
pp <- PeRson("me", 10, "hello")
pp
pp$age
p <- PerSon(name = "erica")
p
p <- PerSon("erica" )
p <- PerSon(name = "erica" )
p <- PerSon(name = "erica", profession = "waiter" )
p
p <- PerSon("erica", 33, "waiter" )
source("homework.R")
source("homework.R")
identitcal(alex, refClassAlex)
identical(alex, refClassAlex)
alex
source("homework.R")
identical(alex, refClassAlex)
identical(schmalex, refClassAlex)
identical(s4classTaylor, taylor)
identical(S4classTaylor, taylor)
source("homework.R")
sameAge_3
sameAge_3
source("homework.R")
sameAge_3
vec_1[1]
vec_1[1]$age
vec_1[1]$name
vec_2
vec_2[[1]]
vec_2[[1]][1]
sameAge_!
sameAge_1
sameAge_2
vec_1
vec_1[1]
vec_1[[1]]
vec_1[[1]]$age
vec_2[[1]]
vec_2[[1]]$age
source("homework.R")
source("homework.R")
source("homework.R")
sameAge_4
source("homework.R")
source("homework.R")
S4ClassSameness_2
S4ClassSameness_1
source("homework.R")
refClassSameness_4
refClassSameness_3
S4ClassSameness_2
q()
source("homework.R")
vec_1 == vec_2
identical(vec_1, vec_2)
identical(c(), list())
list()
q()
"hello" < "hell"
"hello" < "a"
"a" < "a"
"a" < "b"
"a" < "hello"
"hell" < "hello"
list(2, NULL, NULL)
getwd()
source("BSTTests.R")
source("BSTTests.R")
insertTest()
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
insertTest()
n <- BST()
n$repr()
n$insert(5)
n$repr()
q()
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
nodeTests()
left <- treeNode(3, NULL, NULL)
left$repr()
source("BSTTests.R")
nodeTests()
left <- treeNode(3, NULL, NULL)
left$repr()
source("BSTTests.R")
nodeTests()
left
left$repr()
left$height()
insertTest()
newBST <- BST()
newBST$inset(5)
newBST$insert(5)
newBST$repr()
source("BSTTests.R")
insertTest()
newBST <- BST()
newBST$insert(5)
source("BSTTests.R")
newBST <- BST()
newBST$insert(5)
newBEST$repr()
newBST$repr()
newBST
source("BSTTests.R")
newBST <- BST()
newBST$insert(5)
newBST
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
newBST <- BST()
newBST$insert(5)
newBST
newBST$repr()
newBST$insert(3)
source("BSTTests.R")
insertTest()
source("BSTTests.R")
insertTest()
source("BSTTests.R")
insertTest()
source("BSTTests.R")
insertTest()
source("BSTTests.R")
insertTest()
existsTest()
removeTest()
source("BSTTests.R")
removeTest()
source("BSTTests.R")
existsTest()
source("BSTTests.R")
existsTest()
"poop" == "pee"
"poop" == "poop"
q()
