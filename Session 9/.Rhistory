ss[1]
ss[2]
getClass(ss)
slotNames(ss)
help(ss)
??ss
str(Ss)
str(ss)
ss[name]
ss[1]
ss[1][1]
ss[2]
ss[1][2]
ss[[1]]
pp <- c(name = "alex", age = 22)
pp
pp[1]
pp[[1]]
p[[2]]
isS4(pp)
integer(0)
factor(2)
factor(0)
factor()
isS4
isS4( c())
isS4( numeric() )
isS4( matrix())
str( factor(2) )
??factor()
sent <- "the sun is red but the moon is blue"
ss <- unlist( split( sent, ""))
ss
ss <- unlist( strsplit( sent, ""))
ss
ss <- unlist( strsplit( sent, " "))
ss
ws <- factor(ss)
ws
table(es)
table(ws)
ws[1]
ws[[1]]
wss <- factor(ws, levels=ss)
ws
ws
ws[1]
ws
str(ws)
isS4(ws)
levels(ws)
levels(ws)[ws]
levels(ws)["the"]
levels(ws)
str(levels(ws))
source("homework.R")
source("homework.R")
source("homework.R")
p <- PerSon
p
p <- PerSon()
p
source("homework.R")
source("homework.R")
source("homework.R")
p <- PerSon()
p
p <- PerSon(name = "Alex", age = "22", profession = "unemployed" )
p <- PerSon(name = "Alex", age = 22, profession = "unemployed" )
p
source("homework.R")
source("homework.R")
pp <- PeRson("me", 10, "hello")
pp
pp$age
p <- PerSon(name = "erica")
p
p <- PerSon("erica" )
p <- PerSon(name = "erica" )
p <- PerSon(name = "erica", profession = "waiter" )
p
p <- PerSon("erica", 33, "waiter" )
source("homework.R")
source("homework.R")
identitcal(alex, refClassAlex)
identical(alex, refClassAlex)
alex
source("homework.R")
identical(alex, refClassAlex)
identical(schmalex, refClassAlex)
identical(s4classTaylor, taylor)
identical(S4classTaylor, taylor)
source("homework.R")
sameAge_3
sameAge_3
source("homework.R")
sameAge_3
vec_1[1]
vec_1[1]$age
vec_1[1]$name
vec_2
vec_2[[1]]
vec_2[[1]][1]
sameAge_!
sameAge_1
sameAge_2
vec_1
vec_1[1]
vec_1[[1]]
vec_1[[1]]$age
vec_2[[1]]
vec_2[[1]]$age
source("homework.R")
source("homework.R")
source("homework.R")
sameAge_4
source("homework.R")
source("homework.R")
S4ClassSameness_2
S4ClassSameness_1
source("homework.R")
refClassSameness_4
refClassSameness_3
S4ClassSameness_2
q()
source("homework.R")
vec_1 == vec_2
identical(vec_1, vec_2)
identical(c(), list())
list()
q()
"hello" < "hell"
"hello" < "a"
"a" < "a"
"a" < "b"
"a" < "hello"
"hell" < "hello"
list(2, NULL, NULL)
getwd()
source("BSTTests.R")
source("BSTTests.R")
insertTest()
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
insertTest()
n <- BST()
n$repr()
n$insert(5)
n$repr()
q()
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
nodeTests()
left <- treeNode(3, NULL, NULL)
left$repr()
source("BSTTests.R")
nodeTests()
left <- treeNode(3, NULL, NULL)
left$repr()
source("BSTTests.R")
nodeTests()
left
left$repr()
left$height()
insertTest()
newBST <- BST()
newBST$inset(5)
newBST$insert(5)
newBST$repr()
source("BSTTests.R")
insertTest()
newBST <- BST()
newBST$insert(5)
source("BSTTests.R")
newBST <- BST()
newBST$insert(5)
newBEST$repr()
newBST$repr()
newBST
source("BSTTests.R")
newBST <- BST()
newBST$insert(5)
newBST
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
newBST <- BST()
newBST$insert(5)
newBST
newBST$repr()
newBST$insert(3)
source("BSTTests.R")
insertTest()
source("BSTTests.R")
insertTest()
source("BSTTests.R")
insertTest()
source("BSTTests.R")
insertTest()
source("BSTTests.R")
insertTest()
existsTest()
removeTest()
source("BSTTests.R")
removeTest()
source("BSTTests.R")
existsTest()
source("BSTTests.R")
existsTest()
"poop" == "pee"
"poop" == "poop"
q()
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
insertTest()
q()
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
source("BSTTests.R")
insertTest()
newBST <- BST()
newBST$insert(5)
newBST$remove(5)
newBST()
newBST
newBST$insert(5)
newBST
newBST$repr()
newBST$remove(5)
newBST$repr()
newBST$insert(5)
newBST$insert(3)
newBST$insert(8)
newBST$repr()
newBST$remove(5)
newBST$repr()
source("BSTTests.R")
source("BSTTests.R")
insertTest()
source("BSTTests.R")
existsTest()
newBST <- BST()
newBST$insert(5)
newBST$remove(5)
source("BSTTests.R")
newBST$insert(5)
newBST$remove(5)
insertTest()
newBST$remove(5)
newBST$insert(5)
newBST$repr()
newBST$root$isLeaf()
source("BSTTests.R")
newBST$insert(5)
newBST
source("BSTTests.R")
newBST
newBST$remove(5)
newBST
newBST$insert(5)
newBST
newBST$remove(5)
newBST
source("BSTTests.R")
newBST
newBST$insert(5)
newBST$remove(5)
source("BSTTests.R")
newBST$insert(5)
newBST$remove(5)
source("BSTTests.R")
newBST
newBST$insert(5)
newBST$remove(5)
newBST
newBST$insert(5)
newBST$insert(3)
newBST$remove(5)
newBST
newBST$remove(3)
root <- treeNode(3, NULL, NULL)
root$isLeaf()
root$isLeftSingleMom()
root$isRightSingleDad()
root$isLess(3)
root$isLess(4)
root$isLess(2)
root$isSame(2)
root$isSame(3)
root$isSame(5)
removeTest()
source("BSTTests.R")
removeTest()
newBST
newBST$insert(5)
newBST$insert(8)
newBST$remove(5)
newBST
newBST$repr()
newBST$remove(8)
newBST$repr()
newBST$insert(5)
newBST$insert(3)
newBST$remove(5)
newBST$repr()
newBST$remove(3)
source("BSTTests.R")
removeTest()
newBST
newBST$insert(5)
newBST$insert(8)
newBST$remove(5)
identical( newBST$repr(), list(8, NULL, NULL) )
newBST$repr()
newBST$remove(8)
newBST$repr()
newBST$insert(8)
newBST$insert(5)
newBST$remove(5)
newBST$repr()
newBST$insert(5)
newBST$remove(8)
newBST$repr()
newBST$insert(8)
newBST$remove(5)
newBST$repr()
newBST$insert(5)
newBST$repr()
newBST$root$isLeftSingleMom()
newBST$remove(5)
newBST$insert(9)
newBST$root$isRightSingleDad()
newBST$remove(9)
newBST$repr()
newBST$remove(8)
source("BSTTests.R")
removeTest()
insertTest()
existsTest()
newBST
newBST$insert(5)
newBST$remove(5)
newBST$insert(5)
max(newBST$root)
newBST$repr()
newBST$insert(8)
newBST$remove(5)
traceback()
debug()
newBST$insert(5)
debug( newBST$remove(5) )
debug( newBST$remove )
newBST$remove(5)
options( error= traceback)
newBST$insert(5)
newBST$remove(5)
newBST
newBST$remove(8)
options( error = browser() )
options( error = browser() )
options( error= traceback)
newBST$remove(8)
newBST
newBST$remove(8)
source("BSTTests.R")
removeTest()
source("BSTTests.R")
removeTest()
q()
max
max(9, 10)
max( c(10, 9) )
q()
max
source("BSTTests.R")
source("BSTTests.R")
source("treePlot.R")
max
source("treePlot.R")
source("treePlot.R")
max
rm(max)
max
source("BST.R")
max
source("treePlot.R")
myTree$height
myTree$height()
source("treePlot.R")
source("treePlot.R")
valueAsXHeightAsY()
source("treePlot.R")
valueAsXHeightAsY()
source("treePlot.R")
valueAsXHeightAsY()
q()
source("BST.R")
source("BST.R")
n <- BST()
n$insert(3)
n$remove(3)
source("BST.R")
n <- BST()
n$insert(3)
n$remove(3)
n$insert(5)
n$insert(3)
n$insert(8)
n$remove(5)
rm(list = ls() )
source("BST.R")
source("BST.R")
n <- BST()
n$insert(5)
n$insert(3)
n$insert(8)
n$remove(5)
n
n$repr()
source("BSTTests.R")
removeTest()
source("BSTTests.R")
removeTest()
newBST
n <- BST()
n$insert(5)
n$insert(3)
n$insert(8)
n$insert(4)
n$insert(2)
n$insert(7)
n$remove(5)
n
source("BSTTests.R")
n <- BST()
n$insert(5)
n$insert(3)
n$insert(8)
n$insert(4)
n$insert(7)
n$insert(2)
maxNode(n$root)
maxNode(n$root$left)
newLeft <- n$root$left$delete(4)
newLeft
source("BSTTests.R")
source("BSTTests.R")
source("BST.R")
source("BSTTests.R")
removeTest()
n$insert(5)
n
n <- BST()
n$insert(5)
n$insert(3)
n$insert(8)
n$insert(2)
n$insert(4)
n$insert(7)
n$remove(5)
n
n$repr()
leftr <- list(3, list(2, NULL, NULL), NULL)
leftr
rightr <- list(8, list(7, NULL, NULL), NULL)
nn <- list(4, leftr, rightr)
nn
n$repr() == nn
identical(n$repr(), nn)
source("BSTTests.R")
removeTest()
n <- BST()
n$insert(5)
n$insert(3)
n$insert(8)
right <- list(8, NULL, NULL)
n$repr()[[3]] 
identical(n$repr()[[3]], right) 
n$remove(5)
identical(n$repr()[[3]], right) 
identical(n$repr()[[1]], 3) 
identical(n$repr()[[2]], NULL) 
n$repr()[[2]]
n$repr()
source("BSTTests.R")
source("BST.R")
removeTest()
source("BSTTests.R")
removeTest()
q()
source("SpokyTree.R")
source("SpokyTree.R")
treeNode(3, 0, 0)
treeNode(3, NULL, NULL)
q()
